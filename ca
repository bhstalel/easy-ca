#!/bin/bash

###############
bold="\e[1m"
underline="\e[4m"
reset="\e[0m"
red="\e[31m"
green="\e[32m"
blue="\e[34m"
yellow="\e[33m"
error="$bold$red;$reset$bold"
good="$bold$blue [+] "
###############

dir=""
acdir=""

HELPMENU(){
	echo
	echo -e "  $bold$blue  # HELP MENU $reset"
	echo -e "  $bold  ;  $reset"
	echo -e "  $bold  ;$green ca help $reset"
	echo -e "  $bold  ; Show this menu $reset"
	echo -e "  $bold  ;  $reset"

	echo -e "  $bold  ;$green ca install <PATHDESTINATION> $reset"
	echo -e "  $bold  ; Install CA after setting up varaibles $reset"
	echo -e "  $bold  ;  $reset"

	echo -e "  $bold  ;$green ca req <FQDN> $reset"
	echo -e "  $bold  ; Create key and cert file signed by this CA $reset"
	echo -e "  $bold  ;  $reset"
	echo
}


NOARGERROR(){
	echo
	echo -e "$bold$red;$reset$bold See:$blue$bold bash ca help $reset"
	echo
}

INSTALLCA(){
	echo $realpath > cadir 
	###############
	realpath=$1
	mkdir $realpath/etc
	cp conf.d/* $realpath/etc
	cd $realpath
	echo
	###############
	echo -e "$good Creating Root-ca $reset"
	mkdir -p ca/root-ca/private ca/root-ca/db crl certs
	chmod 700 ca/root-ca/private
	sleep .5
	echo -e "$good Creating Root-ca's database $reset"
	cp /dev/null ca/root-ca/db/root-ca.db
	cp /dev/null ca/root-ca/db/root-ca.db.attr
	echo 01 > ca/root-ca/db/root-ca.crt.srl
	echo 01 > ca/root-ca/db/root-ca.crl.srl
	sleep .5
	echo -e "$good Creating Root-ca request $reset"
	sudo openssl req -new -config etc/root-ca.conf -out ca/root-ca.csr -keyout ca/root-ca/private/root-ca.key -nodes
	sleep .5
	echo -e "$good Creating Root-ca certificate $reset"
	sudo openssl ca -selfsign -config etc/root-ca.conf -in ca/root-ca.csr -out ca/root-ca.crt -extensions root_ca_ext -batch
	sleep .5
	###############
	echo -e "$good Creating signing-ca $reset"
	mkdir -p ca/signing-ca/private ca/signing-ca/db crl certs
	chmod 700 ca/signing-ca/private
	sleep .5
	echo -e "$good Creating signing-ca's database $reset"
	cp /dev/null ca/signing-ca/db/signing-ca.db
	cp /dev/null ca/signing-ca/db/signing-ca.db.attr
	echo 01 > ca/signing-ca/db/signing-ca.crt.srl
	echo 01 > ca/signing-ca/db/signing-ca.crl.srl
	sleep .5
	echo -e "$good Creating signing-ca request $reset"
	sudo openssl req -new -config etc/signing-ca.conf -out ca/signing-ca.csr -keyout ca/signing-ca/private/signing-ca.key -nodes
	sleep .5
	echo -e "$good Creating signing-ca certificate $reset"
	sudo openssl ca -config etc/root-ca.conf -in ca/signing-ca.csr -out ca/signing-ca.crt -extensions signing_ca_ext -batch
	sleep .5
	###############
}

main(){


if [ $# -eq 0 ]; then

	NOARGERROR

elif [ $# -eq 1 ]; then

	case $1 in 
		help) HELPMENU ;;
		req) REQUEST ;;
		install)  
			echo
			echo -e "$error Specify a directory $reset"
			echo
		;;
		*) NOARGERROR ;;
	esac

elif [ $# -eq 2 ]; then

	case $1 in 
		req|r|request) 
			workdir=`cat cadir`
			cd $workdir
			san=$2
			echo -e "$good Making request $reset"
			SAN=DNS:$2 openssl req -new -config etc/server.conf -out certs/$2.csr -keyout certs/$2.key
			echo -e "$good Signing ... $reset"
			openssl ca -config etc/signing-ca.conf -in certs/$2.csr -out certs/$2.crt -extensions server_ext -batch
		;;
		install) 
			realpath=$(realpath $2)

			if [ -d $realpath ]; then
				INSTALLCA $realpath
			else
				mkdir $realpath
				INSTALLCA $realpath
			fi

		;;
		*) 
			NOARGERROR
		;;
	esac

else

	NOARGERROR

fi


}

case $EUID in 
	0) main $@ ;;
	*) 
		echo
		echo -e "$error Run as root"
		echo
	;;
esac
